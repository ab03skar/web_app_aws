AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ProjectName:
    Description: A name to give resources
    Type: String
Resources:
  # Add your resources here
  # We include a portion of the LaunchTemplate resource so you can use the UserData.
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref ProjectName
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      
      Subnets:
      - Fn::ImportValue: !Sub "${ProjectName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${ProjectName}-PUB2-SN"
      SecurityGroups:
      - Ref: SecurityGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: TargetGroup
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: '80'
      Protocol: HTTP
  ListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'TargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData:
        ImageId: ami-053b0d53c279acc90
        SecurityGroupIds:
          - !Ref SecurityGroup
        InstanceType: t2.micro

        #idk if i need this but i think its best practice 
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt-get update -y
            sudo apt-get install nginx -y
            service nginx start
          
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: !Sub "${ProjectName}-PRIV-NETS"
      LaunchTemplate: 
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      #i need 4 running servers, 2 on each private subnet
      # the MinSize should be 2 or 4?
      MinSize: '2'
      DesiredCapacity: '4'
      MaxSize: '6'
      TargetGroupARNs:
      - Ref: TargetGroup      

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-VPCID"


  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-987213-uda-bucket"
      #should we make it private and ONLY users iwth the Role can access it?
      AccessControl: Private
      
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ProjectName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Policies:
        - PolicyName: s3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 's3:PutObject'
              - 's3:GetObject'
              Resource:
                - !GetAtt Bucket.Arn
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref IAMRole

Outputs:

  LoadBalancerDNSName:
     Value:
      Fn::Sub: "http://${LoadBalancer.DNSName}"